/* ==========================================
   动画效果 - Animations CSS
   定义所有动画和过渡效果
   ========================================== */

/* ==========================================
   关键帧动画定义
   ========================================== */

/* 消息滑入动画 */
@keyframes messageSlideIn {
  from {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* 脉冲动画 - 用于录音按钮 */
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 59, 48, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(255, 59, 48, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 59, 48, 0);
  }
}

/* 加载旋转动画 */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* 打字机效果 */
@keyframes typewriter {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

/* 闪烁光标 */
@keyframes blink {
  0%, 50% {
    opacity: 1;
  }
  51%, 100% {
    opacity: 0;
  }
}

/* 渐入动画 */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* 渐出动画 */
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* 从下方滑入 */
@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 从上方滑入 */
@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 从左侧滑入 */
@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* 从右侧滑入 */
@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* 缩放进入 */
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* 弹跳动画 */
@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translateY(0);
  }
  40%, 43% {
    transform: translateY(-15px);
  }
  70% {
    transform: translateY(-7px);
  }
  90% {
    transform: translateY(-3px);
  }
}

/* 摇摆动画 */
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-5px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(5px);
  }
}

/* 波浪效果 */
@keyframes wave {
  0%, 100% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(-10deg);
  }
  75% {
    transform: rotate(10deg);
  }
}

/* 呼吸效果 */
@keyframes breathe {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
}

/* 渐变背景动画 */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* ==========================================
   动画类定义
   ========================================== */

/* 基础动画类 */
.animate-fadeIn {
  animation: fadeIn var(--duration-normal) var(--easing-decelerate);
}

.animate-fadeOut {
  animation: fadeOut var(--duration-normal) var(--easing-accelerate);
}

.animate-slideInUp {
  animation: slideInUp var(--duration-normal) var(--easing-decelerate);
}

.animate-slideInDown {
  animation: slideInDown var(--duration-normal) var(--easing-decelerate);
}

.animate-slideInLeft {
  animation: slideInLeft var(--duration-normal) var(--easing-decelerate);
}

.animate-slideInRight {
  animation: slideInRight var(--duration-normal) var(--easing-decelerate);
}

.animate-scaleIn {
  animation: scaleIn var(--duration-normal) var(--easing-decelerate);
}

.animate-bounce {
  animation: bounce 0.6s var(--easing-decelerate);
}

.animate-shake {
  animation: shake 0.5s var(--easing-standard);
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-wave {
  animation: wave 1s ease-in-out infinite;
}

.animate-breathe {
  animation: breathe 3s ease-in-out infinite;
}

/* ==========================================
   加载指示器
   ========================================== */
.loading-indicator {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-4);
  padding: var(--space-8);
  background: var(--bg-primary);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-xl);
  z-index: var(--z-modal);
  opacity: 0;
  visibility: hidden;
  transition: all var(--duration-normal) var(--easing-standard);
}

.loading-indicator.show {
  opacity: 1;
  visibility: visible;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--border-light);
  border-top: 3px solid var(--primary-blue);
  border-radius: var(--radius-full);
  animation: spin 1s linear infinite;
}

.loading-text {
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
  font-weight: var(--font-weight-medium);
}

/* ==========================================
   通知提示
   ========================================== */
.notification {
  position: fixed;
  top: var(--space-6);
  right: var(--space-6);
  z-index: var(--z-tooltip);
  opacity: 0;
  visibility: hidden;
  transform: translateX(100%);
  transition: all var(--duration-normal) var(--easing-standard);
}

.notification.show {
  opacity: 1;
  visibility: visible;
  transform: translateX(0);
}

.notification-content {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  padding: var(--space-4) var(--space-5);
  background: var(--bg-primary);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  max-width: 400px;
}

.notification.success .notification-content {
  border-color: var(--secondary-green);
  background: rgba(52, 199, 89, 0.1);
}

.notification.error .notification-content {
  border-color: var(--secondary-red);
  background: rgba(255, 59, 48, 0.1);
}

.notification.warning .notification-content {
  border-color: var(--secondary-orange);
  background: rgba(255, 149, 0, 0.1);
}

.notification-message {
  flex: 1;
  font-size: var(--font-size-sm);
  color: var(--text-primary);
  line-height: var(--line-height-normal);
}

.notification-close {
  background: none;
  border: none;
  font-size: var(--font-size-lg);
  color: var(--text-secondary);
  cursor: pointer;
  padding: 0;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-sm);
  transition: all var(--duration-fast) var(--easing-standard);
}

.notification-close:hover {
  background: var(--bg-secondary);
  color: var(--text-primary);
}

/* ==========================================
   设置面板动画
   ========================================== */
.settings-panel {
  position: fixed;
  top: 0;
  right: 0;
  width: 400px;
  height: 100vh;
  background: var(--bg-primary);
  border-left: 1px solid var(--border-light);
  box-shadow: var(--shadow-xl);
  z-index: var(--z-modal);
  transform: translateX(100%);
  transition: transform var(--duration-normal) var(--easing-standard);
}

.settings-panel.open {
  transform: translateX(0);
}

.settings-panel::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 400px;
  bottom: 0;
  background: var(--bg-overlay);
  opacity: 0;
  visibility: hidden;
  transition: all var(--duration-normal) var(--easing-standard);
  z-index: -1;
}

.settings-panel.open::before {
  opacity: 1;
  visibility: visible;
}

/* ==========================================
   打字机效果组件
   ========================================== */
.typewriter-text {
  overflow: hidden;
  border-right: 2px solid var(--primary-blue);
  white-space: nowrap;
  margin: 0 auto;
  animation: typewriter 3s steps(40, end), blink 0.75s step-end infinite;
}

.typewriter-text.no-cursor {
  border-right: none;
  animation: typewriter 3s steps(40, end);
}

/* ==========================================
   悬浮动画效果
   ========================================== */
.hover-lift {
  transition: all var(--duration-normal) var(--easing-standard);
}

.hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.hover-scale {
  transition: transform var(--duration-normal) var(--easing-standard);
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-glow {
  transition: all var(--duration-normal) var(--easing-standard);
}

.hover-glow:hover {
  box-shadow: 0 0 20px var(--primary-blue-light);
}

/* ==========================================
   渐变背景动画
   ========================================== */
.gradient-bg {
  background: linear-gradient(-45deg, 
    var(--primary-blue), 
    var(--secondary-purple), 
    var(--secondary-green), 
    var(--secondary-orange));
  background-size: 400% 400%;
  animation: gradientShift 15s ease infinite;
}

/* ==========================================
   页面转场动画
   ========================================== */
.page-transition-enter {
  opacity: 0;
  transform: translateX(20px);
}

.page-transition-enter-active {
  opacity: 1;
  transform: translateX(0);
  transition: all var(--duration-normal) var(--easing-decelerate);
}

.page-transition-exit {
  opacity: 1;
  transform: translateX(0);
}

.page-transition-exit-active {
  opacity: 0;
  transform: translateX(-20px);
  transition: all var(--duration-normal) var(--easing-accelerate);
}

/* ==========================================
   响应式动画调整
   ========================================== */
@media (max-width: 768px) {
  .settings-panel {
    width: 100vw;
  }
  
  .settings-panel::before {
    right: 100vw;
  }
  
  .notification {
    top: var(--space-4);
    right: var(--space-4);
    left: var(--space-4);
  }
  
  .notification-content {
    max-width: none;
  }
}

/* 减少动画效果（用户偏好） */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  .animate-spin {
    animation: none;
  }
  
  .animate-pulse {
    animation: none;
  }
  
  .gradient-bg {
    animation: none;
  }
}
